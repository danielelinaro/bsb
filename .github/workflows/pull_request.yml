name: Validate Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  validate-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: PR Conventional Commit Validation
        uses:  ytanikin/PRConventionalCommits@1.3.0
        with:
          task_types: '["feat","fix","docs","test","ci","refactor","perf","revert"]'

  get-modified:
    runs-on: ubuntu-latest
    if: github.event.action != 'edited'
    outputs:
      matrix: ${{ steps.get-affected.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Get affected projects
        id: get-affected
        run: |
          packages=$(./nx show projects --projects "packages/*" --affected)
          packages=[\"$(echo $packages | sed -r 's/[ ]+/", "/g')\"]
          echo "packages=$packages" >> $GITHUB_OUTPUT
  preview-docs:
    needs: [ get-modified ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.get-modified.outputs.matrix) }}
    steps:
      - name: Preview BSB Readthedocs
        uses: readthedocs/actions/preview@v1
        with:
          project-slug: ${{ matrix.package }}
