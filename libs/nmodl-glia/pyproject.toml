[tool.coverage.run]
branch = true
source = [ "nmodl_glia" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../coverage/libs/nmodl-glia/html'
 --cov-report xml:'../../coverage/libs/nmodl-glia/coverage.xml'
 --html='../../reports/libs/nmodl-glia/unittests/html/index.html'
 --junitxml='../../reports/libs/nmodl-glia/unittests/junit.xml'
"""

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "nmodl-glia"
version = "6.0.0-a1"
authors = [{name = "Robin De Schepper", email = "robingilbert.deschepper@unipv.it"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"]
dynamic = ["description"]
dependencies= [
    "click~=8.0",
    "appdirs~=1.0",
    "errr~=1.2",
    "cookiecutter~=2.0",
    "black>=24.0",
    "toml~=0.10",
    "neuron>=8.2.6; sys_platform != 'win32'",
    "importlib_metadata~=6.5"
]

[tool.flit.module]
name = "glia"

[project.urls]
Home = "https://github.com/dbbs-lab/glia"

[project.scripts]
glia = "glia._cli:glia"

[project.optional-dependencies]
parallel = [
    "mpi4py~=3.0",
]
neuron = [
    "nrn-patch~=6.0"
]
arbor = [
    "arbor~=0.9"
]
docs = [
    "sphinx~=7.0",
    "furo~=2023.9",
    "sphinxemoji~=0.2",
    "sphinx_design~=0.5",
    "sphinx-copybutton~=0.5",
]
test = [
    "nmodl-glia[parallel]",
    "coverage~=7.0"
]
dev = [
    "nmodl-glia[test, docs]",
    "pre-commit~=3.5",
    "isort~=5.12",
    "bump-my-version~=1.0",
    "flit~=3.2"
]

[dependency-groups]
dev = [
  "autopep8>=2.3.1",
  "ruff>=0.8.2",
  "pytest>=8.3.4",
  "pytest-sugar>=1.0.0",
  "pytest-cov>=6.0.0",
  "pytest-html>=4.1.1",
]

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []
