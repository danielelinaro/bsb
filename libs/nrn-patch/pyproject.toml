[tool.coverage.run]
branch = true
source = [ "nrn_patch" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../coverage/libs/nrn-patch/html'
 --cov-report xml:'../../coverage/libs/nrn-patch/coverage.xml'
 --html='../../reports/libs/nrn-patch/unittests/html/index.html'
 --junitxml='../../reports/libs/nrn-patch/unittests/junit.xml'
"""

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "nrn-patch"
version = "6.0.0-a1"
authors = [{ name = "Robin De Schepper", email = "robingilbert.deschepper@unipv.it" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
dynamic = ["description"]
python_requires = ">=3.10"
dependencies = [
    "nmodl-glia[neuron]~=6.0",
    "errr~=1.2",
    "numpy~=1.21",
    "NEURON>=8.0,<10.0; sys_platform != 'win32'",
]

[project.urls]
Home = "https://github.com/dbbs-lab/patch"

[project.entry-points."glia.package"]
extensions = "patch.extensions:package"

[project.optional-dependencies]
parallel = ["mpi4py~=3.0"]
test = [
    "coverage~=7.0"
]
docs = [
    "sphinx~=7.2",
    "helveg--sphinx-code-tabs~=0.2",
    "sphinx-rtd-theme~=2.0",
]
dev = [
    "nrn-patch[test, docs]",
    "pre-commit~=3.0",
    "black~=24.0",
]

[tool.flit.module]
name = "patch"

[dependency-groups]
dev = [
  "autopep8>=2.3.1",
  "ruff>=0.8.2",
  "pytest>=8.3.4",
  "pytest-sugar>=1.0.0",
  "pytest-cov>=6.0.0",
  "pytest-html>=4.1.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []
